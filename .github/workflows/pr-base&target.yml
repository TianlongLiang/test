name: PR test
on:
  # will be triggered on PR events
  pull_request:
    # open: pull request is created
    # edited: title, body, or the base branch of the PR is modified
    # synchronize: commit(s) pushed to the pull request
    # reopened: closed pull request is reopened
    types: [opened, edited, synchronize, reopened]
  pull_request_target:
    # When a pull request merges, the pull request is automatically closed.
    # To run a workflow when a pull request merges, use the pull_request_target closed event type along with 
    # a conditional that checks the merged value of the event. For example, the following workflow will run whenever a pull request closes.
    # The if_merged job will only run if the pull request was also merged.
    types:
      - closed
  # allow to be triggered manually
  workflow_dispatch:

jobs:
  where_I_am:
    if: github.event_name != workflow_dispatch
    runs-on: ubuntu-latest
    steps:
      - run: echo "The PR source is ${{ github.head_ref }}"
      - run: echo "The PR target(base) is ${{ github.base_ref }}"

  if_pr_target_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  if_pr_base_something:
    if: github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."